---
import BaseHead from "../components/BaseHead.astro"
import Footer from "../components/Footer.astro"
import HeaderLink from "../components/HeaderLink.astro"
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts"
const { title } = Astro.props.frontmatter || Astro.props

const pageTitle = title ? `${title} | ${SITE_TITLE}` : SITE_TITLE
---

<!doctype html>
<html lang="en" class="h-full">
  <head>
    <BaseHead title={pageTitle} description={SITE_DESCRIPTION} />
  </head>
  <body class="bg-gray-950 min-h-full flex text-gray-200 selection:bg-gray-700">
    <div class="lg:max-w-4xl w-full px-8 mx-auto bg-gray-900 flex flex-col">
      <div class="pt-16 lg:pt-32 pb-8">
        <h1 class="text-3xl font-semibold text-center mb-4">{SITE_TITLE}</h1>
        <h2 class="mb-8 text-center">
          SysAdmin &middot; Full-Stack Developer &middot; Network Engineer
        </h2>
        <div class="flex justify-center gap-1">
          <HeaderLink href="/">Home</HeaderLink>
          <HeaderLink href="/about">About</HeaderLink>
          <HeaderLink href="/library">Library</HeaderLink>
          <HeaderLink href="/contact">Contact</HeaderLink>
        </div>
      </div>
      <main class="flex-1">
        <slot />
      </main>
      <Footer />
    </div>
    <style is:global>
      /* This code handles the "soloing" of technology category, hiding all li elements that don't belong to the category 
      
      This rule applies when any `.icon-x` inside `.technologies` is hovered.
  
      Selects list items within `.technologies` (excluding those with the `.key` class) that:
        1. Are direct children of `div > ul > li`, or (Top level list item)
        2. Are nested `ul ul:has(.icon-c) li` that are in a container that has at least one `.icon-x` class (Nested list items, that are in a section that isn't fully excluded)
        
      For both of these types of list items, the rule excludes any list item that contains `.icon-x` showing only the ones that do not contain the hovered icon.
      */

      .technologies li {
        @apply transition-opacity duration-100;
      }

      div:has(.technologies .icon-open-source:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-open-source) li):not(
          :has(.icon-open-source)
        ) {
        @apply opacity-50;
      }

      div:has(.technologies .icon-learning:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-learning) li):not(
          :has(.icon-learning)
        ) {
        @apply opacity-50;
      }

      div:has(.technologies .icon-professional:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-professional) li):not(
          :has(.icon-professional)
        ) {
        @apply opacity-50;
      }

      div:has(.technologies .icon-personal:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-personal) li):not(
          :has(.icon-personal)
        ) {
        @apply opacity-50;
      }

      div:has(.technologies .icon-academic:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-academic) li):not(
          :has(.icon-academic)
        ) {
        @apply opacity-50;
      }

      div:has(.technologies .icon-interested:hover)
        .technologies:not(.key)
        li:is(div > ul > li, ul ul:has(.icon-interested) li):not(
          :has(.icon-interested)
        ) {
        @apply opacity-50;
      }
    </style>
  </body>
</html>
